{"version":3,"sources":["webpack:///./node_modules/@dschau/gatsby-theme-blog/src/pages/404.js"],"names":["Container","Link","Header","Description","OnNoAFourOhFour","data","title","to","fluid","pageQuery"],"mappings":"8RAQMA,EAAS,+IAAf,gDAQMC,EAAO,wCAAH,mIASJC,EAAM,mSAgBNC,EAAW,mNAaF,SAASC,EAAgB,GAAW,IAATC,EAAQ,EAARA,KACxC,OACE,YAAC,IAAD,cACE,iBAAKC,MAAM,oBACX,mBACE,eAAMC,GAAG,KACP,mBADF,eAEE,iBAAOC,MAAOH,wBAA2BG,QACzC,mBAPR,sCAcK,IAAMC,EAAN","file":"component---node-modules-dschau-gatsby-theme-blog-src-pages-404-js-9849ca8537b58cb3b927.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport Image from 'gatsby-image'\nimport { graphql, Link as GatsbyLink } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport { fadeInBottom } from '../style/animations'\n\nconst Container = styled.div`\n  max-width: 100%;\n  transform: translateY(16px) scale(0.99);\n  transform-origin: 50% 0;\n  opacity: 0;\n  animation: ${fadeInBottom} 0.3s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n`\n\nconst Link = styled(GatsbyLink)`\n  display: block;\n  position: relative;\n  transition: transform 175ms ease-in-out;\n  &:hover {\n    transform: scale(1.075);\n  }\n`\n\nconst Header = styled.h1`\n  color: white;\n  padding: 1rem 2rem;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  z-index: 2;\n  font-size: 72px;\n  text-transform: uppercase;\n  text-align: center;\n  line-height: 96px;\n  pointer-events: none;\n  width: 100%;\n`\n\nconst Description = styled.p`\n  font-size: 0.9rem;\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  right: 0;\n  color: rgba(255, 255, 255, 0.8);\n  z-index: 2;\n  text-align: center;\n  font-style: italic;\n  width: 100%;\n`\n\nexport default function OnNoAFourOhFour({ data }) {\n  return (\n    <React.Fragment>\n      <SEO title=\"404 - Not Found\" />\n      <Container>\n        <Link to=\"/\">\n          <Header>Oh no! 404!</Header>\n          <Image fluid={data.image.childImageSharp.fluid} />\n          <Description>(Click this to go back to Home)</Description>\n        </Link>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    image: file(absolutePath: { regex: \"/404.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 800) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}